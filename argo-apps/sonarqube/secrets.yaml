#apiVersion: v1
#kind: Secret
#metadata:
#  name: admin-password-secret-name
#  namespace: sonarqube
#type: kubernetes.io/basic-auth
#stringData:
#  password: "admin"
#  currentPassword: "admin"
#---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: sonarqube-secrets
  namespace: sonarqube
spec:
  refreshInterval: "0" # default 1h , should only be refreshed on deploy (?)
  secretStoreRef:
    name: sonarqube-secrets # must match `SecretStore` name
    kind: SecretStore
  target:
    name: sonarqube-secrets
    creationPolicy: Owner # `Owner` creates the secret # `Merge` combines SSM params with existing secret
    immutable: true # check

  data:
    - secretKey: SONARQUBE_JDBC_USERNAME # key name requirement in upstream chart
      remoteRef:
        key: sonar_rds_user  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set

    - secretKey: SONARQUBE_JDBC_PASSWORD # key name requirement in upstream chart
      remoteRef:
        key: sonar_rds_password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: jdbcUrl # key name requirement in upstream chart # SSM has `jdbc:postgresql://[host]:[port]/[database]` interpolation baked in
      remoteRef:
        key: sonar_rds_endpoint
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: SONARQUBE_JDBC_URL # key name requirement in upstream chart # SSM has `jdbc:postgresql://[host]:[port]/[database]` interpolation baked in
      remoteRef:
        key: sonar_rds_endpoint
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: sonar_rds_dbname
      remoteRef:
        key: sonar_rds_dbname
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: sonar_rds_port
      remoteRef:
        key: sonar_rds_port
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: sonar_token
      remoteRef:
        key: sonar_token
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: password # key name requirement in upstream chart (admin password)
      remoteRef:
        key: sonar_admin_password
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

    - secretKey: currentPassword # key name requirement in upstream chart (admin password)
      remoteRef:
        key: sonar_admin_password_current
        conversionStrategy: Default
        decodingStrategy: None
        metadataPolicy: None

---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: sonarqube-secrets
  namespace: sonarqube
spec:
  provider:
    aws:
      service: ParameterStore
      region: us-east-1  # AWS region specific, pending dynamic value
      auth:
        jwt: # requires `sts:AssumeRoleWithWebIdentity` permission (set in tf)
          serviceAccountRef:
            name: sonarqube # name of actual serviceAccount (not role)


