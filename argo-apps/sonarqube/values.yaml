replicaCount: 1 # value of 0 will not launch any pods

#deploymentStrategy:
# priorityClassName: "high-priority"

securityContext:
  fsGroup: 0
#  runAsUser: 0 #
#  runAsGroup: 0 #
#  allowPrivilegeEscalation: true #
#  privileged: true #

initSysctl:
  enabled: false
  #image: busybox:1.36

initFs:
  enabled: false
  #Image: busybox:1.36

#containerSecurityContext:
#  allowPrivilegeEscalation: false
#  runAsNonRoot: true
#  runAsUser: 1000
#  runAsGroup: 0
#  seccompProfile:
#    type: RuntimeDefault
#  capabilities:
#    drop: ["ALL"]
#  readOnlyRootFilesystem: true

initContainers:
  image: busybox:1.36
#  securityContext:
#    allowPrivilegeEscalation: false
#    runAsNonRoot: true
#    runAsUser: 1000
#    runAsGroup: 0
#    seccompProfile:
#      type: RuntimeDefault
#    capabilities:
#      drop: ["ALL"]
#    readOnlyRootFilesystem: true

elasticsearch:
  configureNode: false # default
  bootstrapChecks: true # default
  # https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html#vm-max-map-count
  # https://github.com/SonarSource/docker-sonarqube/issues/614

service:
  type: ClusterIP
  externalPort: 9000
  internalPort: 9000
  labels:
    app.kubernetes.io/instance: sonarqube # needed for ALB to work
    app.kubernetes.io/name: sonarqube # needed for ALB to work

nodeSelector:
  role: "django" # assigning app nodegroup for POC purposes

readinessProbe: # bypass probes for testing purposes, allow for argocd to sync
  exec:
    command:
    - sh
    - -c
    - "exit 0"

livenessProbe: # bypass probes for testing purposes, allow for argocd to sync
  exec:
    command:
    - sh
    - -c
    - "exit 0"

## Environment variables to attach to the pods
##
# env:
#   # If you use a different ingress path from /, you have to add it here as the value of SONAR_WEB_CONTEXT
#   - name: SONAR_WEB_CONTEXT
#     value: /sonarqube
#   - name: VARIABLE
#     value: my-value

## Those default are based on the default `Web -Xmx1G -Xms128m` and `CE -Xmx2G -Xms128m` and Search -Xmx2G -Xms2G settings of SQ sub processes
## Adjust these values to your needs, you can find more details on the main README of the chart.
# SONAR_CE_JAVAOPTS # sonar.ce.javaOpts
resources:
  limits:
    cpu: 800m
    memory: 6144M
    ephemeral-storage: 5536M
  requests:
    cpu: 400m
    memory: 2048M # 1536M # 2048M
    ephemeral-storage: 1536M

# SONAR_WEB_JAVAOPTS= #The web server is executed in a dedicated Java process. Use this property to customize JVM options.
# SONAR_WEB_JAVAADDITIONALOPTS= #Same as previous property, but allows to not repeat all other settings like -Xmx

# A custom sonar.properties file can be provided via dictionary.
# For example:

#sonarProperties:
##  #sonar.forceAuthentication: true
#  sonar.web.host: sonarqube-sonarqube.sonarqube.svc.cluster.local
#  sonar.web.port: 9000
#  sonar.host.url: http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000

# Additional sonar properties to load from a secret with a key "secret.properties" (must be a string)
# sonarSecretProperties:

# Kubernetes secret that contains the encryption key for the sonarqube instance.
# The secret must contain the key 'sonar-secret.txt'.
# The 'sonar.secretKeyPath' property will be set automatically.
# sonarSecretKey: "settings-encryption-secret"

tests:
  enabled: false

serviceAccount:
  create: false
  name: sonarqube
  automountToken: true

## pod sonarqube-sonarqube-0
# SONAR_WEB_SYSTEMPASSCODE:     <set to the key 'SONAR_WEB_SYSTEMPASSCODE' in secret 'sonarqube-sonarqube-monitoring-passcode'>
# Startup probe failed: Get "http://10.0.10.66:9000/api/system/status



# Default Administrator credentials are still being used. Make sure to change the password or deactivate the account.
#account:
#  adminPassword: admin123
#  currentAdminPassword: admin123
#  # values can be also provided by a secret that contains "password" and "currentPassword" as keys. You can generate such a secret in your cluster
#  # using "kubectl create secret generic admin-password-secret-name --from-literal=password=admin --from-literal=currentPassword=admin"
#  #adminPasswordSecretName: "sonarqube-secrets"
#  curlContainerImage: curlimages/curl:8.2.1 # initContainers.securityContext # account.securityContext

## RDS connection

postgresql:
  enabled: false # creates `sample` db. RDS is used instead

jdbcOverwrite: # even if you define `extraConfig` this needs to be on, but only for `jdbcSecret`
  enable: true
  #enabled: true # chart documentation is wrong, says `enable` is deprecated, but `enabled` doesn't work
  jdbcSecretName: "sonarqube-secrets"
  jdbcSecretPasswordKey: "SONAR_JDBC_PASSWORD"

# `extraConfig` is only able to load jdbc url and jdbc user, jdbcOverwrite needs to be set to true, and secret name has to be defined for password
# url key needs to be `SONAR_JDBC_URL` and user needs to be `SONAR_JDBC_USERNAME`, documentation is incorrect defining `SONARQUBE_JDBC_URL` `SONARQUBE_JDBC_USERNAME`
extraConfig: # contains JDBC/RDS connection values
  secrets:
    - sonarqube-secrets