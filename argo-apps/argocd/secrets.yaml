apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-secrets
  namespace: argocd
spec:
  refreshInterval: "0"
  secretStoreRef:
    name: argocd-secrets # must match `SecretStore` name
    kind: SecretStore
  target:
    name: argocd-secrets
    creationPolicy: Owner # Owner is managed by ESO
    immutable: true # check
  data:
    - secretKey: ARGOCD_ADMIN_PASSWORD # arbitrary assigned key name, used as ${variable}
      remoteRef:
        key: argo_cd_admin_password  # The path to SSM parameter
        conversionStrategy: Default # argocd appset will loop infinitely if not set
        decodingStrategy: None # argocd appset will loop infinitely if not set
        metadataPolicy: None # argocd appset will loop infinitely if not set
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: argocd-secrets
  namespace: argocd
spec:
  provider:
    aws:
      service: ParameterStore
      region: us-east-1  # AWS region specific, pending dynamic value
      auth:
        jwt: # requires `sts:AssumeRoleWithWebIdentity` permission (set in tf)
          serviceAccountRef:
            name: argo-cd-argocd-server # argo-cd-argocd-repo-server # name of actual serviceAccount (not role) attached to IRSA