apiVersion: batch/v1
kind: Job
metadata:
  generateName: cleanup-resources-
  annotations:
    argocd.argoproj.io/hook: PreDelete
spec:
  template:
    spec:
      serviceAccountName: argocd-cleanup
      containers:
      - name: cleanup
        image: bitnami/kubectl
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Patching CRDs to remove finalizers, excluding system-critical CRDs..."
          kubectl get crd --no-headers | grep -v "kube-system" | awk '{print $1}' | xargs -I {} kubectl patch crd {} -p '{"metadata":{"finalizers":[]}}' --type=merge

          echo "Deleting resources in all namespaces except kube-system..."
          for ns in $(kubectl get ns --no-headers | grep -v "kube-system" | awk '{print $1}'); do
            echo "Deleting all resources in namespace: $ns"
            kubectl delete all,cm,pvc,sa,roles,rolebindings,secrets --all --namespace=$ns
          done

          echo "Checking and deleting empty namespaces, excluding kube-system..."
          for ns in $(kubectl get ns --no-headers | grep -v "kube-system" | awk '{print $1}'); do
            if [ -z "$(kubectl get all,pvc,cm,sa,secrets,roles,rolebindings --namespace=$ns --no-headers)" ]; then
              echo "Deleting namespace: $ns"
              kubectl delete ns $ns --wait=false
            else
              echo "Namespace $ns is not empty and was not deleted."
            fi
          done

      restartPolicy: Never